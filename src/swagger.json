{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "cv-index-search-api",
    "description": "An search engine on CV with Elasticsearch and TypeScript",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/elastic/index": {
      "get": {
        "summary": "Get elastic field index",
        "tags": [
          "Elasticsearch indexing queries"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "The elastic target field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Index cvs fetched successfully",
            "schema": {
              "$ref": "#/definitions/Elastic"
            }
          },
          "400": {
            "description": "Invalid"
          },
          "404": {
            "description": "Failed Could not get index cvs."
          }
        }
      },
      "post": {
        "summary": "Create elastic field index",
        "tags": [
          "Elasticsearch indexing queries"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "The elastic target field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Index created successfully",
            "schema": {
              "$ref": "#/definitions/Elastic"
            }
          },
          "400": {
            "description": "Invalid"
          },
          "404": {
            "description": "Failed. Could not create index."
          }
        }
      },
      "put": {
        "summary": "Update elastic field with given name",
        "tags": [
          "Elasticsearch indexing queries"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "The elastic target field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Index updated successfully",
            "schema": {
              "$ref": "#/definitions/Elastic"
            }
          },
          "400": {
            "description": "Invalid"
          },
          "404": {
            "description": "Failed. Index not found."
          }
        }
      },
      "delete": {
        "summary": "Delete elastic field with given name",
        "tags": [
          "Elasticsearch indexing queries"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "The elastic target field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Index deleted successfully",
            "schema": {
              "$ref": "#/definitions/Elastic"
            }
          },
          "400": {
            "description": "Invalid"
          },
          "404": {
            "description": "Failed. Index not found."
          }
        }
      }
    },
    "/cv": {
      "get": {
        "summary": "Show CV with given id",
        "tags": [
          "CV queries"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Get CV with ID",
            "required": true,
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CV fetched successfully",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "400": {
            "description": "Invalid"
          },
          "404": {
            "description": "Failed. CV not found."
          }
        }
      },
      "post": {
        "summary": "Upload CV file and insert to Elastic",
        "tags": [
          "CV queries"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "requestBody": {
          "description": "Upload CV",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/definitions/File"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Uploaded cv and created successfully",
            "schema": {
              "$ref": "#/definitions/CV"
            }
          },
          "400": {
            "description": "Invalid"
          },
          "404": {
            "description": "Failed"
          }
        }
      },
      "delete": {
        "summary": "Delete CV with given id",
        "tags": [
          "CV queries"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Delete CV with ID",
            "required": true,
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CV deleted successfully",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "400": {
            "description": "Invalid"
          },
          "404": {
            "description": "Failed. CV not found."
          }
        }
      }
    },
    "/cv/search": {
      "get": {
        "summary": "Search with keywords",
        "tags": [
          "Search queries"
        ],
        "parameters": [
          {
            "name": "keywords",
            "in": "query",
            "description": "The keywords that needs to be fetched. Example=Java,Typescript.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Keywords research successfully",
            "schema": {
              "$ref": "#/definitions/CVs"
            }
          },
          "400": {
            "description": "Invalid"
          },
          "404": {
            "description": "Failed. Not found."
          }
        }
      }
    }
  },
  "definitions": {
    "Elastic": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "Elastics": {
      "type": "object",
      "properties": {
        "elastics": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Elastic"
          }
        }
      }
    },
    "id": {
      "properties": {
        "uuid": {
          "type": "string"
        }
      }
    },
    "CV": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "CVs": {
      "type": "object",
      "properties": {
        "CVs": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/CV"
          }
        }
      }
    },
    "File": {
      "type": "object",
      "properties": {
        "cvs": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "binary"
          }
        }
      }
    }
  }
}