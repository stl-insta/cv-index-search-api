version: "3.2"

services:
  cv-app:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.front
    container_name: "cv-app"
    ports:
      - "8080:8080"
    command: sh -c "http-server dist"
    networks:
      - elastic
    depends_on:
      - api
    restart: unless-stopped

  api:
    build:
      context: dockerfiles
      dockerfile: Dockerfile.api
    env_file: '.env'
    container_name: "api"
    volumes:
      - "./:/source"
    working_dir: /source
    ports:
      - "8000:8000"
    command: sh -c "npm install && npm start"
    networks:
      - elastic
    depends_on:
      - es01
      - log01
    restart: unless-stopped

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.0
    container_name: es01
    environment:
      - discovery.type=single-node
      - 'ES_JAVA_OPTS=-Xms750m -Xmx750m'
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - elastic
    restart: unless-stopped

  kib01:
    image: docker.elastic.co/kibana/kibana:7.15.0
    container_name: kib01
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS:
        http://es01:9200
    networks:
      - elastic
    depends_on:
      - es01
    restart: unless-stopped

  log01:
    image: docker.elastic.co/logstash/logstash:7.15.0
    container_name: log01
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elastic
    depends_on:
      - es01
    restart: unless-stopped

volumes:
  data01:
    driver: local

networks:
  elastic:
    driver: bridge
